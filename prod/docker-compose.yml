name: countive-docker-prod

services:
  application:
    build:
      context: ../application
      dockerfile: application.prod.Dockerfile
    depends_on:
      - database
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: "1G"
        reservations:
          cpus: "0.25"
          memory: "500M"
    environment:
      DATABASE_URI: ${DATABASE_URI}
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      NEXTAUTH_URL_INTERNAL: ${NEXTAUTH_URL_INTERNAL}
      NEXT_AUTH_JS_JWT_SECRET: ${NEXT_AUTH_JS_JWT_SECRET}
      NEXT_AUTH_JS_SECRET: ${NEXT_AUTH_JS_SECRET}
      PORT: 3001
    networks:
      - network
    ports:
      - "3000:3000"
      - "3001:3001"
    restart: on-failure:1
    volumes:
      - type: volume
        source: node-modules_volume
        target: /app/node_modules
  database:
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "1G"
        reservations:
          cpus: "0.25"
          memory: "500M"
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_PASSWORD: ${DATABASE_PASS}
      POSTGRES_USER: ${DATABASE_USER}
    image: "postgres:14-alpine"
    networks:
      - network
    ports:
      - "5432:5432"
    restart: on-failure:1
    volumes:
      - type: volume
        source: postgresql-data_volume
        target: /var/lib/postgresql/data
  migrate:
    build:
      context: ../application
      dockerfile: application.prod.Dockerfile
    command: ["npx", "prisma", "migrate", "deploy"]
    depends_on:
      - database
    environment:
      DATABASE_URI: ${DATABASE_URI}
    networks:
      - network
    profiles:
      - migrate
    volumes:
      - type: bind
        source: ../application/prisma
        target: /app/prisma
      - type: volume
        source: node-modules_volume
        target: /app/node_modules
  seed:
    build:
      context: ../application
      dockerfile: application.prod.Dockerfile
    command: ["npx", "prisma", "db", "seed"]
    depends_on:
      - database
    environment:
      DATABASE_URI: ${DATABASE_URI}
    networks:
      - network
    profiles:
      - seed
    volumes:
      - type: bind
        source: ../application/prisma
        target: /app/prisma
      - type: volume
        source: node-modules_volume
        target: /app/node_modules
  seed2:
    build:
      context: ../application
      dockerfile: application.prod.Dockerfile
    command: ["npm", "run", "seed2"]
    depends_on:
      - database
    environment:
      DATABASE_URI: ${DATABASE_URI}
    networks:
      - network
    profiles:
      - seed2
    volumes:
      - type: bind
        source: ../application/prisma
        target: /app/prisma
      - type: volume
        source: node-modules_volume
        target: /app/node_modules

networks:
  network:

volumes:
  node-modules_volume:
  postgresql-data_volume:
